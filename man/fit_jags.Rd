% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{fit_jags}
\alias{fit_jags}
\title{Fit Bayesian model using MCMC}
\usage{
fit_jags(
  jags_data,
  jags_model,
  params,
  n_chain = 2,
  n_burn = 1000,
  n_samp = 1000,
  n_thin = 1,
  DIC = FALSE,
  parallel = FALSE
)
}
\arguments{
\item{jags_data}{a list of data objects}

\item{jags_model}{character string giving the model specification in JAGS/BUGS syntax}

\item{params}{vector of parameters to monitor}

\item{n_chain}{number of MCMC sampling chains}

\item{n_burn}{number of iterations to discard before sampling of chains begins (burn in)}

\item{n_samp}{number of iterations to sample each chain}

\item{n_thin}{interval to thin samples}

\item{DIC}{logical indicating whether or not to calculate the Deviance Information Criterion (DIC)}

\item{parallel}{logical indicating whether or not to run MCMC chains in parallel or sequentially (default = FALSE). An even number of chains is recommended when running in parallel.}
}
\value{
an \code{\link[coda:mcmc.list]{mcmc.list}} object
}
\description{
This is a general wrapper function for fitting a model to data using the JAGS MCMC algorithm.
The function uses code adapted from the \code{\link[rjags]{rjags}} package. Options include
calculating the Deviance Information Criterion (DIC) and running sampling chains in parallel.
}
\details{
If JAGS library not already installed, install here: \url{https://sourceforge.net/projects/mcmc-jags/files/JAGS/3.x/}
}
\examples{
N <- 100
lambda <- 10
y <- rpois(n=N, lambda=lambda)

jags_data <- list(N=N, y=y)

jags_model <- "
model {

  for(i in 1:N){

    y[i] ~ dpois(lambda)

  }

  lambda ~ dgamma(1, 0.01)

}"

params <- c('lambda')

mod <- fit_jags(jags_data=jags_data,
                jags_model=jags_model,
                params=params)
}
\seealso{
Other model: 
\code{\link{check_mobility}()},
\code{\link{fit_gravity}()},
\code{\link{fit_mobility}()},
\code{\link{fit_prob_travel}()},
\code{\link{summary.mobility.model}()}
}
\author{
John Giles
}
\concept{model}
